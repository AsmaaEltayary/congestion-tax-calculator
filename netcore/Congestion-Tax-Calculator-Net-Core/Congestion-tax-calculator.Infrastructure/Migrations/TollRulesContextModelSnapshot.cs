// <auto-generated />
using Congestion_tax_calculator.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Congestion_tax_calculator.Infrastructure.Migrations
{
    [DbContext(typeof(TollRulesContext))]
    partial class TollRulesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Congestion_tax_calculator.Infrastructure.Entities.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "",
                            Name = "Gothenburg"
                        });
                });

            modelBuilder.Entity("Congestion_tax_calculator.Infrastructure.Entities.CityTollRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityTollRules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 8,
                            CityId = 1,
                            From = "06:00",
                            To = "06:29"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 13,
                            CityId = 1,
                            From = "06:30",
                            To = "06:59"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 18,
                            CityId = 1,
                            From = "07:00",
                            To = "07:59"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 13,
                            CityId = 1,
                            From = "08:00",
                            To = "08:29"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 8,
                            CityId = 1,
                            From = "08:30",
                            To = "14:59"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 13,
                            CityId = 1,
                            From = "15:00",
                            To = "15:29"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 18,
                            CityId = 1,
                            From = "15:30",
                            To = "16:59"
                        },
                        new
                        {
                            Id = 9,
                            Amount = 13,
                            CityId = 1,
                            From = "17:00",
                            To = "17:59"
                        },
                        new
                        {
                            Id = 10,
                            Amount = 8,
                            CityId = 1,
                            From = "18:00",
                            To = "18:29"
                        },
                        new
                        {
                            Id = 11,
                            Amount = 0,
                            CityId = 1,
                            From = "18:30",
                            To = "05:59"
                        });
                });

            modelBuilder.Entity("Congestion_tax_calculator.Infrastructure.Entities.CityTollRule", b =>
                {
                    b.HasOne("Congestion_tax_calculator.Infrastructure.Entities.City", "City")
                        .WithMany("CityTollRule")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Congestion_tax_calculator.Infrastructure.Entities.City", b =>
                {
                    b.Navigation("CityTollRule");
                });
#pragma warning restore 612, 618
        }
    }
}
